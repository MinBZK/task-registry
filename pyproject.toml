[tool.poetry]
name = "task-registry"
version = "0.1.0"
readme = "README.md"
description = ""
authors = ["ai-validatie-team <ai-validatie@minbzk.nl>"]
repository = "https://github.com/MinBZK/task-registry"
keywords = ["AI", "Validation", "Instrument", "Requirement", "Measure", "Task", "Registry"]
license = "EUPL-1.2"
classifiers = [
    "Development Status :: Alpha",
    "Framework :: FastAPI",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed"
]
packages = [
    { include = "task_registry" }
]

[tool.poetry.scripts]
deploy = "task_registry.data:main"

[tool.poetry.dependencies]
python = "^3.12"
jsonschema = "^4.22.0"
pyyaml = "^6.0.1"
fastapi = "^0.112.2"
uvicorn = "^0.30.6"
pydantic-settings = "^2.4.0"

setuptools = "^74.1.1"
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.2"
coverage = "^7.6.1"
playwright = "^1.45.0"
pytest-playwright = "^0.5.1"
pytest-httpx = "^0.30.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.3"
pre-commit = "^3.8.0"
pyright = "^1.1.378"
liccheck = "^0.9.2"
types-pyyaml = "^6.0.12.20240724"


[tool.poetry.urls]
"Issue Tracker" = "https://github.com/MinBZK/task-registry/issues"

# Ruff settings: https://docs.astral.sh/ruff/configuration/
[tool.ruff]
line-length = 120
target-version = "py312"
src = ["task_registry", "tests", "script"]
include = ['script/validate']

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = ["I", "SIM", "B", "UP", "F", "E", "S", "C90", "DTZ", "LOG", "PIE", "PT", "ERA", "W", "C", "TRY", "RUF", "ANN"]
fixable = ["ALL"]
task-tags = ["TODO"]
ignore = ["TRY003", "ANN101"]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = ["S101", "ANN201"]

[tool.ruff.lint.mccabe]
max-complexity = 8

[tool.pyright]
pythonVersion = "3.11"
typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = true
reportUnnecessaryIsInstance = false
exclude = [
    ".venv",
]

[tool.coverage.run]
branch = true
command_line = "-m pytest"
relative_files = true # needed for sonarcloud code coverage
omit = [
    "tests/*"
]


[tool.coverage.report]
fail_under = 95

[tool.coverage.html]
directory = "htmlcov"
title = "task-registry"


[tool.pytest.ini_options]
testpaths = [
    "tests"
]
addopts = "--strict-markers -v -q --tracing on"
filterwarnings = [
    "ignore::UserWarning"
]
log_cli = true
log_cli_level = "INFO"
faulthandler_timeout = 20
markers = [
   "slow: marks tests as slow"
]

[tool.liccheck]
level = "PARANOID"
dependencies = true
authorized_licenses = [
    "Apache Software",
    "Artistic",
    "BSD",
    "GNU General Public License v2 or later (GPLv2+)",
    "GNU General Public License v3 or later (GPLv3+)",
    "GNU General Public License (GPL)",
    "GNU Library or Lesser General Public License (LGPL)",
    "MIT",
    "The Unlicense (Unlicense)",
    "ISC License (ISCL)",
    "Mozilla Public License 2.0 (MPL 2.0)",
    "Python Software Foundation"
]
